package org.data.structure;
public class OperatorEx {
public static void main(String[] args) {
int a = 10;
System.out.println (a < 11 & a < 20); //returns false
System.out.println (a < 10 || a < 20); //returns true
System.out.println (!(a < 10 & a < 20)); //returns true
}

}




package org.data.structure;

public class OperatorEx {
public static void main(String[] args) {
int a = 10;
boolean b = true;
System.out.println (a++); //returns 11
System.out.println (++a);
System.out.println (a--);
System.out.println (--a);
System.out.println (!b); // returns false
}

}



package org.data.structure;

import java.util.ArrayList;
import java.util.List;

public class SearchArrayListEx {
public static void main(String[] args) {
List<String> list = new ArrayList<>();
list.add("Suraj");
list.add("Dheerja");
list.add("Neeraj");
list.add("Rishab");
list.add("Atul");
list.add("Rubina");
list.add("Nishanth");
list.add("Zeeshan");
list.add("Rubina");
list.add("Subsreee");

System.out.println(list.contains("Subsreee"));

System.out.println(list.indexOf("Atul"));

System.out.println(list.lastIndexOf("Rubina"));

}
}




package org.data.structure;

import java.util.ArrayList;

class Employee
{
int age;
String name;
public Employee(int age, String name) {
super();
this.age = age;
this.name = name;
}
public int getAge() {
return age;
}
public void setAge(int age) {
this.age = age;
}
public String getName() {
return name;
}
public void setName(String name) {
this.name = name;
}
@Override
public String toString() {
return "Employee [age=" + age + ", name=" + name + "]";
}

// Employee emp = new Employee();
}
public class UserDefinedObjectArrayEx {
public static void main(String[] args) {

ArrayList<Employee> employee = new ArrayList<>();
employee.add(new Employee(20,"Suraj"));
System.out.println(employee);
}

}




package org.data.structure;

import java.util.Stack;

class Main {
public static void main(String[] args) {

// create an object of Stack class
Stack<String> animals= new Stack<>();

// push elements to top of stack
animals.push("Dog");
animals.push("Horse");
animals.push("Cat");
System.out.println("Stack: " + animals);

// pop element from top of stack
animals.pop();
System.out.println("Stack after pop: " + animals);
}
}